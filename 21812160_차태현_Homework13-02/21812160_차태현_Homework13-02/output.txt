Inserting vertices ..
Inserted vertices: GJ, DJ, DG, BS, PH, SW, WJ, GR, SL, CC, SC, 
Inserting edges ..
Inserted edges: 
Edge(GJ, DJ,  138), Edge(GJ, DG,  170), Edge(GJ, BS,  202), Edge(DJ, GJ,  138), Edge(DJ, DG,  120), 
Edge(DJ, SW,  109), Edge(DG, GJ,  170), Edge(DG, PH,   66), Edge(DG, DJ,  120), Edge(DG, BS,   87), 
Edge(DG, WJ,  174), Edge(BS, GJ,  202), Edge(BS, PH,   93), Edge(BS, DG,   87), Edge(PH, DG,   66), 
Edge(PH, BS,   93), Edge(PH, GR,  200), Edge(SW, DJ,  109), Edge(SW, WJ,   84), Edge(SW, SL,   34), 
Edge(WJ, DG,  174), Edge(WJ, SW,   84), Edge(WJ, GR,   91), Edge(WJ, CC,   47), Edge(WJ, CC,   47), 
Edge(GR, PH,  200), Edge(GR, WJ,   91), Edge(GR, SC,   42), Edge(SL, SW,   34), Edge(SL, CC,   71), 
Edge(CC, SL,   71), Edge(CC, SC,   79), Edge(SC, GR,   42), Edge(SC, CC,   79), 
Print out Graph based on Adjacency List ..
GRAPH_SIMPLE_USA_7_NODES with 11 vertices has following connectivity :
 vertex ( GJ) : Edge(GJ, DJ,  138) Edge(GJ, DG,  170) Edge(GJ, BS,  202) 
 vertex ( DJ) : Edge(DJ, GJ,  138) Edge(DJ, DG,  120) Edge(DJ, SW,  109) 
 vertex ( DG) : Edge(DG, GJ,  170) Edge(DG, PH,   66) Edge(DG, DJ,  120) Edge(DG, BS,   87) Edge(DG, WJ,  174) 
 vertex ( BS) : Edge(BS, GJ,  202) Edge(BS, PH,   93) Edge(BS, DG,   87) 
 vertex ( PH) : Edge(PH, DG,   66) Edge(PH, BS,   93) Edge(PH, GR,  200) 
 vertex ( SW) : Edge(SW, DJ,  109) Edge(SW, WJ,   84) Edge(SW, SL,   34) 
 vertex ( WJ) : Edge(WJ, DG,  174) Edge(WJ, SW,   84) Edge(WJ, GR,   91) Edge(WJ, CC,   47) Edge(WJ, CC,   47) 
 vertex ( GR) : Edge(GR, PH,  200) Edge(GR, WJ,   91) Edge(GR, SC,   42) 
 vertex ( SL) : Edge(SL, SW,   34) Edge(SL, CC,   71) 
 vertex ( CC) : Edge(CC, SL,   71) Edge(CC, SC,   79) 
 vertex ( SC) : Edge(SC, GR,   42) Edge(SC, CC,   79) 

Testing Breadth First Search with Dijkstra Algorithm

Distance Matrix of Graph (GRAPH_SIMPLE_USA_7_NODES) :
       |   GJ   DJ   DG   BS   PH   SW   WJ   GR   SL   CC   SC
-------+-------------------------------------------------------
   GJ  |    0  138  170  202  +oo  +oo  +oo  +oo  +oo  +oo  +oo
   DJ  |  138    0  120  +oo  +oo  109  +oo  +oo  +oo  +oo  +oo
   DG  |  170  120    0   87   66  +oo  174  +oo  +oo  +oo  +oo
   BS  |  202  +oo   87    0   93  +oo  +oo  +oo  +oo  +oo  +oo
   PH  |  +oo  +oo   66   93    0  +oo  +oo  200  +oo  +oo  +oo
   SW  |  +oo  109  +oo  +oo  +oo    0   84  +oo   34  +oo  +oo
   WJ  |  +oo  +oo  174  +oo  +oo   84    0   91  +oo   47  +oo
   GR  |  +oo  +oo  +oo  +oo  200  +oo   91    0  +oo  +oo   42
   SL  |  +oo  +oo  +oo  +oo  +oo   34  +oo  +oo    0   71  +oo
   CC  |  +oo  +oo  +oo  +oo  +oo  +oo  +oo  +oo   71    0   79
   SC  |  +oo  +oo  +oo  +oo  +oo  +oo  +oo   42  +oo   79    0


Dijkstra Shortest Path Finding from DJ to WJ .... 
Dijkstra::Least Cost from Vertex (DJ) at each round : 
           |   GJ   DJ   DG   BS   PH   SW   WJ   GR   SL   CC   SC
-----------+-------------------------------------------------------
round [ 1] |  138    0  120  +oo  +oo  109  193  +oo  143  +oo  +oo ==> selected vertex :SW
round [ 2] |  138    0  120  207  186  109  193  +oo  143  +oo  +oo ==> selected vertex :DG
round [ 3] |  138    0  120  207  186  109  193  +oo  143  +oo  +oo ==> selected vertex :GJ
round [ 4] |  138    0  120  207  186  109  193  +oo  143  214  +oo ==> selected vertex :SL
round [ 5] |  138    0  120  207  186  109  193  386  143  214  +oo ==> selected vertex :PH
round [ 6] |
reached to the target node (WJ) at Least Cost =193
Path found by DijkstraShortestPath from WJ to DJ : DJ -> SW -> WJ
